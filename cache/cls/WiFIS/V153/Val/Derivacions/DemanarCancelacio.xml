<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="WiFIS.V153.Val.Derivacions.DemanarCancelacio">
<Super>WiFIS.V153.Val.General</Super>
<TimeCreated>63504,64905.182389</TimeCreated>

<Parameter name="SrcVer">
<Description>
Location and Revision of this file in Perforce (Auto-updating)</Description>
<Default>$Id$</Default>
</Parameter>

<Method name="Validar">
<Description>
Validar un mensaje HL7</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pMsg:EnsLib.HL7.Message</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set ret = $$$OK
	try {
		set error = ""
		
		set ret = $$$ADDSC(ret,..MSH(pMsg.FindSegment("MSH"),"OMG","O19","OMG_O19","AL",error))
		set ret = $$$ADDSC(ret, ..PID(pMsg.FindSegment("PID"),error))
		set ret = $$$ADDSC(ret, ..PV1(pMsg.FindSegment("PV1"),error))
		
		set index="", i=0
		do {
			set i=i+1
			set ret = $$$ADDSC(ret, ##class(DemanarNova).AL1(pMsg.FindSegment("AL1",.index),error_"AL("_i_") ",0,i))
		} while index>0
		
		set ret = $$$ADDSC(ret, ..ORC(pMsg.FindSegment("ORC"),error))
		set ret = $$$ADDSC(ret, ..OBR(pMsg.FindSegment("OBR"),error))
		
	} catch ex {
		set ret = $$$ADDSC(ret, ex.AsStatus())
	}
	quit ret
]]></Implementation>
</Method>

<Method name="GT1">
<Description>
Segmento GT1</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pSeg:EnsLib.HL7.Segment,pError:%String="",pReq:%Boolean=1,pIndex:%String=""</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set ret = $$$OK
	try {
		set error=pError_"no cumple "
		
		if '$isobject(pSeg) {
			if pReq set ret=$$$ADDSC(ret,$$$ValError(error_"No existe segmento GT1"))
			quit
		}
		
		// GT1.2
		set val=pSeg.GetValueAt("2")
		if val'="",pSeg.GetValueAt("2.1")="" set ret=$$$ADDSC(ret,$$$ValError(error_"GT1.2.1 informado"))
		if val'="",pSeg.GetValueAt("2.5")'="GI" set ret=$$$ADDSC(ret,$$$ValError(error_"GT1.2.5=GI"))
		
		if pSeg.GetValueAt("10")'="GT" set ret=$$$ADDSC(ret,$$$ValError(error_"GT1.10=GT"))
		
		// GT1.21
		set val=pSeg.GetValueAt("21")
		if val'="" set ret=$$$ADDSC(ret,..Centro(pSeg.GetValueAt("21.10"),error_"GT1.21.10 "))
		
	} catch ex {
		set ret = $$$ADDSC(ret,ex.AsStatus())
	}
	
	quit ret
]]></Implementation>
</Method>

<Method name="ORC">
<Description>
Segmento ORC</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pSeg:EnsLib.HL7.Segment,pError:%String="",pReq:%Boolean=1,pIndex:%String=""</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set ret = $$$OK
	try {
		set error=pError_"no cumple "
		
		if '$isobject(pSeg) {
			if pReq set ret=$$$ADDSC(ret,$$$ValError(error_"No existe segmento ORC"))
			quit
		}

		if pSeg.GetValueAt("1")'="CA" set ret=$$$ADDSC(ret,$$$ValError(error_"ORC.1=CA"))
		
		// ORC.2
		if pSeg.GetValueAt("2.1")="" set ret=$$$ADDSC(ret,$$$ValError(error_"ORC.2.1 informado"))
		set ret=$$$ADDSC(ret,..Centro(pSeg.GetValueAt("2.2"),error_"ORC.2.2 "))
		
		// ORC.3
		if pSeg.GetValueAt("3.1")="" set ret=$$$ADDSC(ret,$$$ValError(error_"ORC.3.1 informado"))
		set ret=$$$ADDSC(ret,..Centro(pSeg.GetValueAt("3.2"),error_"ORC.3.2 "))
		
		// ORC.4
		set val=pSeg.GetValueAt("4")
		if val'="",pSeg.GetValueAt("4.1")="" set ret=$$$ADDSC(ret,$$$ValError(error_"ORC.4.1 informado"))
		if val'="" set ret=$$$ADDSC(ret,..Centro(pSeg.GetValueAt("4.2"),error_"ORC.4.2 "))
		
		if pSeg.GetValueAt("6")'="F" set ret=$$$ADDSC(ret,$$$ValError(error_"ORC.6=F"))
		
		set ret=$$$ADDSC(ret,..CodigoColegiado(pSeg.GetValueAt("12.1"),error_"ORC.12.1 "))
		if pSeg.GetValueAt("12.2.1")="" set ret=$$$ADDSC(ret,$$$ValError(error_"ORC12.2.1 informado"))
		if pSeg.GetValueAt("12.9.1")'="COM" set ret=$$$ADDSC(ret,$$$ValError(error_"ORC12.9.1=COM"))
		if pSeg.GetValueAt("12.13")'="MD" set ret=$$$ADDSC(ret,$$$ValError(error_"ORC12.13=MD"))
		if pSeg.GetValueAt("12.22.1")'="ESP" set ret=$$$ADDSC(ret,$$$ValError(error_"ORC12.13=ESP"))
		if pSeg.GetValueAt("12.22.2")'="ISO3166" set ret=$$$ADDSC(ret,$$$ValError(error_"ORC12.22.2=ISO3166"))
		
		if pSeg.GetValueAt("21.1")="" set ret=$$$ADDSC(ret,$$$ValError(error_"ORC.21.1 informado"))
		set ret=$$$ADDSC(ret,..Centro(pSeg.GetValueAt("21.10"),error_"ORC.21.10 "))
		
	} catch ex {
		set ret = $$$ADDSC(ret,ex.AsStatus())
	}
	
	quit ret
]]></Implementation>
</Method>

<Method name="OBR">
<Description>
Segmento OBR</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pSeg:EnsLib.HL7.Segment,pError:%String="",pReq:%Boolean=1,pIndex:%String=""</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set ret = $$$OK
	try {
		set error=pError_"no cumple "
		
		if '$isobject(pSeg) {
			if pReq set ret=$$$ADDSC(ret,$$$ValError(error_"No existe segmento OBR"))
			quit
		}

		// OBR.2
		if pSeg.GetValueAt("2.1")="" set ret=$$$ADDSC(ret,$$$ValError(error_"OBR.2.1 informado"))
		set ret=$$$ADDSC(ret,..Centro(pSeg.GetValueAt("2.2"),error_"OBR.2.2 "))
		
		// OBR.3
		if pSeg.GetValueAt("3.1")="" set ret=$$$ADDSC(ret,$$$ValError(error_"OBR.3.1 informado"))
		set ret=$$$ADDSC(ret,..Centro(pSeg.GetValueAt("3.2"),error_"OBR.3.2 "))
		
		// OBR.4.3
		set val=pSeg.GetValueAt("4.3")
		if val'="SERAM",val'="SEM",val'="LN",val'="SCT" set ret=$$$ADDSC(ret,$$$ValError(error_"OBR.4.3=[SERAM,SEM,LN,SCT]"))
		
		// OBR.30
		set val=pSeg.GetValueAt("30")
		if val'="CART",val'="PORT",val'="WALK",val'="WHLC",val'="UNK" set ret=$$$ADDSC(ret,$$$ValError(error_"OBR.30=[CART,PORT,WALK,WHLC,UNK]"))
		
		// OBR.31.1
		set val=pSeg.GetValueAt("31.1")
		if val'="C",val'="D",val'="S",val'="R" set ret=$$$ADDSC(ret,$$$ValError(error_"OBR.31.1=[C,D,S,R]"))
		
		if pSeg.GetValueAt("31.3")'="99WOD" set ret=$$$ADDSC(ret,$$$ValError(error_"OBR31.3=99WOD"))
		
		// OBR.46
		set val=pSeg.GetValueAt("46")
		set val2=pSeg.GetValueAt("46.1")
		if val'="",val'="UPP",val'="LOW",val'="L",val'="R",val'="1",val'="2",val'="3",val'="4",val'="5" set ret=$$$ADDSC(ret,$$$ValError(error_"OBR.46.1=[UPP,LOW,L,R,1,2,3,4,5]"))
		
		// OBR.49
		set val=pSeg.GetValueAt("49")
		if val'="",val'="R" set ret=$$$ADDSC(ret,$$$ValError(error_"OBR.49=R"))
		
	} catch ex {
		set ret = $$$ADDSC(ret,ex.AsStatus())
	}
	
	quit ret
]]></Implementation>
</Method>
</Class>
</Export>
