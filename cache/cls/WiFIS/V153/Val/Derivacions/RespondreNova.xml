<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="WiFIS.V153.Val.Derivacions.RespondreNova">
<Super>WiFIS.V153.Val.General</Super>
<TimeCreated>63503,36910.816772</TimeCreated>

<Parameter name="SrcVer">
<Description>
Location and Revision of this file in Perforce (Auto-updating)</Description>
<Default>$Id$</Default>
</Parameter>

<Method name="Validar">
<Description>
Validar un mensaje HL7</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pMsg:EnsLib.HL7.Message</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set ret = $$$OK
	try {
		set error = ""
		
		set ret = $$$ADDSC(ret,..MSH(pMsg.FindSegment("MSH"),"ORG","O20","ORG_O20","NE",error))
		set ret = $$$ADDSC(ret,..MSA(pMsg.FindSegment("MSA"),"AA",error))		
		set ret = $$$ADDSC(ret, ..ORC(pMsg.FindSegment("ORC"),error))
		set ret = $$$ADDSC(ret, ..OBR(pMsg.FindSegment("OBR"),error))
		
	} catch ex {
		set ret = $$$ADDSC(ret, ex.AsStatus())
	}
	quit ret
]]></Implementation>
</Method>

<Method name="ORC">
<Description>
Segmento ORC</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pSeg:EnsLib.HL7.Segment,pError:%String="",pReq:%Boolean=1,pIndex:%String=""</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set ret = $$$OK
	try {
		set error=pError_"no cumple "
		
		if '$isobject(pSeg) {
			if pReq set ret=$$$ADDSC(ret,$$$ValError(error_"No existe segmento ORC"))
			quit
		}
		
		// ORC.1
		if pSeg.GetValueAt("1")'="OK" set ret=$$$ADDSC(ret,$$$ValError(error_"ORC.1=OK"))
		
		// ORC.2
		if pSeg.GetValueAt("2.1")="" set ret=$$$ADDSC(ret,$$$ValError(error_"ORC.2.1 informado"))
		set ret=$$$ADDSC(ret,..Centro(pSeg.GetValueAt("2.2"),error_"ORC.2.2 "))
		
		// ORC.3
		if pSeg.GetValueAt("3.1")="" set ret=$$$ADDSC(ret,$$$ValError(error_"ORC.3.1 informado"))
		set ret=$$$ADDSC(ret,..Centro(pSeg.GetValueAt("3.2"),error_"ORC.3.2 "))
		
		// ORC.5
		if pSeg.GetValueAt("5")'="IP" set ret=$$$ADDSC(ret,$$$ValError(error_"ORC.5=IP"))
		
		// ORC.21
		if pSeg.GetValueAt("21.1")="" set ret=$$$ADDSC(ret,$$$ValError(error_"ORC.21.1 informado"))
		set ret=$$$ADDSC(ret,..Centro(pSeg.GetValueAt("21.10"),error_"ORC.21.10 "))
		
	} catch ex {
		set ret = $$$ADDSC(ret,ex.AsStatus())
	}
	
	quit ret
]]></Implementation>
</Method>

<Method name="OBR">
<Description>
Segmento OBR</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pSeg:EnsLib.HL7.Segment,pError:%String="",pReq:%Boolean=1,pIndex:%String=""</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set ret = $$$OK
	try {
		set error=pError_"no cumple "
		
		if '$isobject(pSeg) {
			if pReq set ret=$$$ADDSC(ret,$$$ValError(error_"No existe segmento OBR"))
			quit
		}

		// OBR.2
		if pSeg.GetValueAt("2.1")="" set ret=$$$ADDSC(ret,$$$ValError(error_"OBR.2.1 informado"))
		set ret=$$$ADDSC(ret,..Centro(pSeg.GetValueAt("2.2"),error_"OBR.2.2 "))
		
		// OBR.3
		if pSeg.GetValueAt("3.1")="" set ret=$$$ADDSC(ret,$$$ValError(error_"OBR.3.1 informado"))
		set ret=$$$ADDSC(ret,..Centro(pSeg.GetValueAt("3.2"),error_"OBR.3.2 "))
		
		// OBR.4.3
		set val=pSeg.GetValueAt("4.3")
		if val'="SERAM",val'="SEM",val'="LN",val'="SCT" set ret=$$$ADDSC(ret,$$$ValError(error_"OBR.4.3=[SERAM,SEM,LN,SCT]"))
		
	} catch ex {
		set ret = $$$ADDSC(ret,ex.AsStatus())
	}
	
	quit ret
]]></Implementation>
</Method>
</Class>
</Export>
