<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="WiFIS.V20.DT.HL72XML">
<Description>
Transforma un EnsLib.HL7.Message a formato XML utilizando el paquete ITB.</Description>
<Super>Ens.DataTransform</Super>
<TimeCreated>63125,57970.08738</TimeCreated>

<Parameter name="SrcVer">
<Description>
Location and Revision of this file in Perforce (Auto-updating)</Description>
<Default>$Id: //custom_ccrs/_common/tools/Iberia/WiFIS/latest/cls/WiFIS/V20/DT/HL72XML.xml#1 $</Default>
</Parameter>

<Method name="Transform">
<ClassMethod>1</ClassMethod>
<FormalSpec>source:EnsLib.HL7.Message,target:WiFIS.V20.Msg.GenericReq</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#dim tSC as %Status=$$$OK
	#dim errObj as %Exception.AbstractException
	#dim tServicio,tTipo
	#dim tmpHL7 as EnsLib.HL7.Message
	
	try {
		set target=##class(WiFIS.V20.Msg.GenericReq).%New()
		set target.Servicio = ##class(WiFIS.V20.Utils.Functions).WiFISServicio(source)
		set target.Tipo = ##class(WiFIS.V20.Utils.Functions).WiFISTipo(source)
		set target.Origen = source.GetValueAt("MSH:4.2")
		set target.Destino = source.GetValueAt("MSH:6.2")
		
		set tmpHL7 = source.%ConstructClone()
		do tmpHL7.BuildMap()
		do ##class(WiFIS.V20.Utils.Functions).WiFISClearMSH(tmpHL7)
		
		set target.DatosXML = ##class(ITB.HL7.Util.Convert).ER7ToXML(tmpHL7, .tSC)
		if $$$ISERR(tSC) $$$ThrowStatus(tSC)
	} catch(errObj) {
		set tSC = errObj.AsStatus()
	}
	
	do:$isobject(tmpHL7) tmpHL7.%Delete()
	
	quit tSC
]]></Implementation>
</Method>
</Class>
</Export>
