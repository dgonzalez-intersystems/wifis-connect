<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="WiFIS.V201.Utils.Functions">
<Description>
Clase con funciones útiles para WiFIS reutilizables en distintos puntos.</Description>
<Super>Ens.Rule.FunctionSet</Super>
<TimeCreated>63147,41279.968743</TimeCreated>

<Parameter name="SrcVer">
<Description>
Location and Revision of this file in Perforce (Auto-updating)</Description>
<Default>$Id: //custom_ccrs/_common/tools/Iberia/WiFIS/latest/cls/WiFIS/V201/Utils/Functions.xml#1 $</Default>
</Parameter>

<Method name="WiFISRespostaOK">
<Description>
Devuelve WSResposta OK (respuesta síncrona) para un mensaje WiFIS</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>WiFIS.V201.BS.s1.WSResposta</ReturnType>
<Implementation><![CDATA[
	set tMsg = ##class(WiFIS.V201.BS.s1.WSResposta).%New()
	set tMsg.LlistaMissatges = ##class(%ListOfDataTypes).%New()
	do tMsg.LlistaMissatges.Insert(..WiFISMissatgeOK())
	quit tMsg
]]></Implementation>
</Method>

<Method name="WiFISMissatgeOK">
<Description>
Devuelve un WSMissatge OK (se inserta en WSResposta) para un mensaje WiFIS</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>WiFIS.V201.BS.s1.WSMissatge</ReturnType>
<Implementation><![CDATA[
	set tMsg = ##class(WiFIS.V201.BS.s1.WSMissatge).%New()
	set tMsg.codi = "WIFIS_OK"
	set tMsg.descripcio = "El missatge s’ha rebut correctament, està ben estructurat i conté la informació requerida"
	quit tMsg
]]></Implementation>
</Method>

<Method name="WiFISRespostaInvalid">
<Description>
Devuelve WSResposta inválida (error) (respuesta síncrona) para un mensaje WiFIS</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pText:%String</FormalSpec>
<ReturnType>WiFIS.V201.BS.s1.WSResposta</ReturnType>
<Implementation><![CDATA[
	set tMsg = ##class(WiFIS.V201.BS.s1.WSResposta).%New()
	set tMsg.LlistaMissatges = ##class(%ListOfDataTypes).%New()
	do tMsg.LlistaMissatges.Insert(..WiFISMissatgeInvalid(pText))
	quit tMsg
]]></Implementation>
</Method>

<Method name="WiFISMissatgeInvalid">
<Description>
Devuelve un WSMissatge OK (se inserta en WSResposta) para un mensaje WiFIS</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pText:%String</FormalSpec>
<ReturnType>WiFIS.V201.BS.s1.WSMissatge</ReturnType>
<Implementation><![CDATA[
	set tMsg = ##class(WiFIS.V201.BS.s1.WSMissatge).%New()
	set tMsg.codi = "WIFIS_INVALID"
	set tMsg.descripcio = pText
	quit tMsg
]]></Implementation>
</Method>

<Method name="WiFISServicio">
<Description>
Devuelve el Servicio (WebService) WiFIS que contiene un mensaje HL7</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pMsg:EnsLib.HL7.Message</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	quit $piece(pMsg.GetValueAt("MSH:3.2"),"#",2)
]]></Implementation>
</Method>

<Method name="WiFISTipo">
<Description>
Devuelve el Tipo (Método del WebService) WiFIS que contiene un mensaje HL7</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pMsg:EnsLib.HL7.Message</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	quit $piece(pMsg.GetValueAt("MSH:3.2"),"#",3)
]]></Implementation>
</Method>

<Method name="WiFISSetServicioTipo">
<Description>
Escribe el Servicio y Tipo WiFIS en un mensaje HL7</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[pServicio:%String,pTipo:%String,&pMsg:EnsLib.HL7.Message]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	do pMsg.SetValueAt(pMsg.GetValueAt("MSH:3.2")_"#"_pServicio_"#"_pTipo, "MSH:3.2",,.tSC)
	quit $$$OK
]]></Implementation>
</Method>

<Method name="WiFISClearMSH">
<Description>
Restaura el segmento MSH de un mensaje HL7 y elimina los datos WiFIS</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pMsg:EnsLib.HL7.Message</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	do pMsg.SetValueAt($piece(pMsg.GetValueAt("MSH:3.2"),"#",1),"MSH:3.2",,.tSC)
	quit $$$OK
]]></Implementation>
</Method>
</Class>
</Export>
